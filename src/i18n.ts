import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';

// Translation resources
const resources = {
  en: {
    translation: {
      // Header
      title: 'Dyson Sphere Program - Production Calculator',
      loadingGameData: 'Loading game data...',
      
      // Recipe Selection
      selectRecipe: 'Select Recipe',
      target: 'Target',
      perMinute: '/min',
      noRecipeSelected: 'Select a recipe to see the production chain',
      
      // Recipe Categories
      categoryAll: 'All',
      categorySmelt: 'Smelt',
      categoryAssemble: 'Assemble', 
      categoryChemical: 'Chemical',
      categoryResearch: 'Research',
      categoryRefine: 'Refine',
      categoryParticle: 'Particle',
      categoryFractionate: 'Fractionate',
      calculating: 'Calculating...',
      searchRecipesItemsMaterials: 'Search recipes, items, or materials...',
      suggestions: 'Suggestions',
      noResultsFound: 'No results found',
      trySearchingFor: 'Try searching for:',
      searchHintRecipeNames: 'Recipe names (e.g., "Iron Ingot", "Circuit")',
      searchHintMaterialNames: 'Material names (e.g., "Iron Ore", "Copper")',
      searchHintProductNames: 'Product names (e.g., "Processor", "Frame")',
      searchHintRecipeIDs: 'Recipe IDs (numeric)',
      favorites: 'Favorites',
      recipe: 'recipe',
      found: 'found',
      for: 'for',
      searchingInNamesIDsInputsOutputs: 'searching in names, IDs, inputs & outputs',
      pleaseSelectRecipe: 'Please select a recipe',
      saved: 'Saved!',
      gameDataNotLoaded: 'Game data not loaded',
      recipeNotFound: 'Recipe not found',
      planLoaded: 'Plan "{{name}}" loaded!',
      loadError: 'Load error',
      planNotFound: 'Plan not found',
      confirmDeletePlan: 'Delete this plan?',
      urlGenerationError: 'URL generation error',
      copyFailed: 'Copy failed',
      
      // Buttons
      save: 'Save',
      load: 'Load',
      shareURL: 'Share URL',
      export: 'Export',
      import: 'Import',
      apply: 'Apply',
      cancel: 'Cancel',
      close: 'Close',
      reset: 'Reset',
      delete: 'Delete',
      show: 'Show',
      hide: 'Hide',
      expand: 'Expand',
      collapse: 'Collapse',
      
      // Settings
      settings: 'Settings',
      proliferator: 'Proliferator',
      none: 'None',
      productionMode: 'Production Mode',
      speedMode: 'Speed Mode',
      conveyorBelt: 'Conveyor Belt',
      sorter: 'Sorter',
      machineRank: 'Machine Rank',
      template: 'Template',
      type: 'Type',
      mode: 'Mode',
      mk1: 'Mk.I',
      mk2: 'Mk.II',
      mk3: 'Mk.III',
      
      // Proliferator Settings
      proliferatorType: 'Proliferator Type',
      proliferatorMode: 'Proliferator Mode',
      proliferatorMK1: 'Proliferator Mk.I',
      proliferatorMK2: 'Proliferator Mk.II',
      proliferatorMK3: 'Proliferator Mk.III',
      exclusive: 'Exclusive',
      productionModeDisabled: 'Production mode disabled for this recipe',
      notAllowed: 'Not allowed',
      output: 'output',
      speed: 'speed',
      activeEffects: 'Active Effects',
      productionBonus: 'Production Bonus',
      speedBonus: 'Speed Bonus',
      powerIncrease: 'Power Increase',
      boost: 'Boost',
      comparingProductionMethods: 'Comparing production methods for',
      comparisonBasedOnProducing: 'Comparison based on producing',
      itemPerSecond: 'item/s',
      withCurrentSettings: '',
      method: 'Method',
      efficiency: 'Efficiency',
      action: 'Action',
      selected: 'Selected',
      select: 'Select',
      compareRecipes: 'Compare recipes',
      defaultOption: 'Default option',
      defaultRecipe: 'Default recipe',
      belt: 'belt',
      
      // Node Settings Modal
      nodeSettings: 'Node Settings',
      unknown: 'Unknown',
      useCustomSettings: 'Use Custom Settings',
      overrideGlobalSettingsForNode: 'Override global settings for this node only',
      usingGlobalSettings: 'Using global settings',
      enableCustomSettingsToOverride: 'Enable custom settings to override',
      resetToGlobal: 'Reset to Global',
      applySettings: 'Apply Settings',
      
      // Template Settings
      applyTemplate: 'Apply {name}?',
      applyQuestion: 'to apply?',
      miningResearch: 'Mining Research',
      stacks: 'stacks',
      pilingSorter: 'Piling Sorter',
      
      // Conveyor Belt Settings
      beltTier: 'Belt Tier',
      stackCount: 'Stack Count (1-4)',
      selectConveyorBeltDesc: 'Select conveyor belt tier and stack count for calculating required belt count.',
      
      // Machine Rank Settings
      smelter: 'Smelter',
      assembler: 'Assembler',
      chemicalPlant: 'Chemical Plant',
      matrixLab: 'Matrix Lab',
      oilRefinery: 'Oil Refinery',
      particleCollider: 'Particle Collider',
      selectMachineRankDesc: 'Select the machine rank to use for each production type. Higher ranks are faster but may require more advanced technology.',
      fixedNoVariants: 'Fixed (no variants)',
      
      // Machine Names
      arcSmelter: 'Arc Smelter',
      planeSmelter: 'Plane Smelter',
      negentropySmelter: 'Negentropy Smelter',
      assemblingMachineMk1: 'Assembling Machine Mk.I',
      assemblingMachineMk2: 'Assembling Machine Mk.II',
      assemblingMachineMk3: 'Assembling Machine Mk.III',
      recomposingAssembler: 'Re-composing Assembler',
      chemicalPlantStandard: 'Chemical Plant',
      quantumChemicalPlant: 'Quantum Chemical Plant',
      matrixLabStandard: 'Matrix Lab',
      selfEvolutionLab: 'Self-evolution Lab',
      miniatureParticleCollider: 'Miniature Particle Collider',
      
      // Templates
      earlyGame: 'Early Game',
      midGame: 'Mid Game',
      lateGame: 'Late Game',
      endGame: 'End Game',
      powerSaver: 'Power Saver',
      earlyGameDesc: 'Basic setup for starting production',
      midGameDesc: 'Improved belts and basic proliferator',
      lateGameDesc: 'Advanced production with Mk.III machines',
      endGameDesc: 'Maximum efficiency with all upgrades',
      powerSaverDesc: 'Minimize machines with production boost',
      
      // Production Tree
      productionTree: 'Production Chain',
      statistics: 'Statistics',
      buildingCost: 'Building Cost',
      expandAll: 'Expand All',
      collapseAll: 'Collapse All',
      
      // Node Info
      requiredRate: 'Required',
      machineCount: 'Machines',
      powerConsumption: 'Power',
      conveyorBelts: 'Belts',
      
      // Statistics
      totalPower: 'Total Power',
      totalMachines: 'Total Machines',
      rawMaterials: 'Raw Materials',
      bottlenecks: 'Bottlenecks',
      productionStatistics: 'Production Statistics',
      selectRecipeToSeeStats: 'Select a recipe to see production statistics',
      productionOverview: 'Production Overview',
      powerGraph: 'Power Graph',
      itemsProduced: 'Items Produced',
      intermediateProducts: 'Intermediate Products',
      production: 'Production',
      consumption: 'Consumption',
      net: 'Net',
      finalProducts: 'Final Products',
      productionRate: 'Production Rate',
      item: 'Item',
      
      // Building Cost
      selectRecipeForBuildingReqs: 'Select a recipe to see building requirements',
      productionMachines: 'Production Machines',
      logistics: 'Logistics',
      sorters: 'Sorters',
      mkIOrHigher: 'Mk.I or higher',
      currentTierSetting: 'current tier setting',
      totalBuildingRequirements: 'Total Building Requirements',
      units: 'units',
      
      // Mining Calculator
      miningCalculator: 'Mining Calculator',
      noRawMaterialsRequired: 'No raw materials required for this production chain.',
      calculateMiningMachinesNeeded: 'Calculate mining machines needed for raw material extraction',
      miningSpeedResearch: 'Mining Speed Research',
      miningResearchHint: '100% = no research, 200% = Lv10',
      machineType: 'Machine Type',
      miningMachine: 'Mining Machine',
      advancedMiningMachine: 'Advanced Mining Machine',
      workSpeed: 'Work Speed',
      advancedOnly: 'Advanced only',
      orbitalCollectors: 'Orbital Collectors',
      forHydrogenDeuterium: 'For Hydrogen/Deuterium',
      powerMultiplier: 'Power Multiplier',
      standardPower: 'Standard power',
      materialBreakdown: 'Material Breakdown',
      required: 'Required',
      research: 'research',
      collectors: 'collectors',
      each: 'each',
      veins: 'veins',
      minersNeeded: 'miners needed',
      veinsNeededLabel: 'Veins Needed',
      veinsNeededDesc: 'Total resource veins required. Miner count estimates ~6 veins per machine.',
      miningSpeedResearchDesc: '+10% per level. Can reach Lv10000+ in-game! (100% = no research, 200% = Lv10)',
      workSpeedAdvanced: 'Work Speed (Advanced only)',
      workSpeedAdvancedDesc: '1% precision slider. Power = (speed%)Â². 300% speed = 9x power!',
      orbitalCollectorsDesc: 'Hydrogen (0.84/s) and Deuterium (0.03/s) only. Research bonus applies.',
      verified: 'Verified',
      verifiedDesc: 'All values confirmed from in-game data.',
      
      // Power Graph View
      powerConsumptionKW: 'Power Consumption (kW)',
      noPowerConsumptionData: 'No power consumption data available',
      totalPowerConsumption: 'Total Power Consumption',
      powerDistribution: 'Power Distribution',
      powerBreakdown: 'Power Breakdown',
      
      // Mod Settings
      modSettings: 'Mod Settings',
      advancedSettingsForModded: 'Advanced settings for modded gameplay',
      advancedFeatures: 'Advanced Features',
      advancedFeaturesWarning: 'These settings are intended for modded gameplay. Uploading invalid data may cause calculation errors.',
      customRecipesXML: 'Custom Recipes.xml',
      uploadCustomRecipesDesc: 'Upload a custom Recipes.xml file to replace the default game recipes. This is useful for recipe modification mods.',
      uploadXML: 'Upload XML',
      resetToDefault: 'Reset to Default',
      recipesUpdatedSuccessfully: 'Recipes updated successfully!',
      customProliferatorMultipliers: 'Custom Proliferator Multipliers',
      customProliferatorMultipliersDesc: 'Set global multipliers for all proliferator bonuses. For example, setting Production to 25 means all production bonuses are multiplied by 25x.',
      productionMultiplierLabel: 'Production Multiplier (1 = default, 25 = 25x)',
      speedMultiplierLabel: 'Speed Multiplier (1 = default, 5 = 5x)',
      applyCustomMultipliers: 'Apply Custom Multipliers',
      defaultMultipliers: 'Default multipliers: 1x (Production), 1x (Speed)',
      pressCtrlShiftM: 'Press Ctrl+Shift+M to open this panel',
      invalidFileType: 'Invalid file type. Please upload an XML file.',
      fileTooLarge: 'File too large. Maximum size is 10MB.',
      invalidRecipesXML: 'Invalid Recipes.xml format. Missing required XML structure.',
      securityError: 'Security error: File contains potentially malicious content.',
      xmlParsingError: 'XML parsing error: Invalid XML syntax.',
      noRecipesFound: 'No recipes found in the uploaded file.',
      failedToParseCustomRecipes: 'Failed to parse custom recipes',
      failedToReadFile: 'Failed to read file',
      confirmResetToDefault: 'Reset to default game data? This will reload all recipes from the original files.',
      failedToReset: 'Failed to reset',
      
      // What-if Simulator
      whatIfSimulator: 'What-If Simulator',
      whatIfAnalysis: 'What-If Analysis',
      compareDifferentSettings: 'Compare different settings to optimize your production',
      current: 'Current',
      scenarioApplied: 'Scenario Applied!',
      scenarioAppliedToSettings: 'has been applied to your global settings',
      bottlenecksDetected: 'Bottlenecks Detected',
      productionChainInefficiencies: 'Your production chain has some inefficiencies. Here are suggested improvements:',
      fixAll: 'Fix All',
      fixNow: 'Fix Now',
      noBottlenecksDetected: 'No Bottlenecks Detected',
      productionChainSmooth: 'Your production chain is running smoothly with no saturation issues. All conveyor belts are operating within optimal capacity (<80%).',
      optimizationEngine: 'Optimization Engine',
      selectOptimizationGoal: 'Select your optimization goal to rank scenarios automatically',
      allOptimizationsComplete: 'All optimizations complete!',
      quickActions: 'Quick Actions',
      applyCommonOptimizations: 'Apply common optimizations with one click',
      maxProliferator: 'Max Proliferator',
      maxBelts: 'Max Belts',
      maxStack: 'Max Stack',
      minPower: 'Min Power',
      minMachines: 'Min Machines',
      maxEfficiency: 'Max Efficiency',
      balanced: 'Balanced',
      optimizationComplete: 'Optimization Complete!',
      alreadyOptimizedFor: 'Your production setup is already optimized for',
      noFurtherImprovements: 'No further improvements available for this optimization goal.',
      perfectConfiguration: 'Your settings are already optimal for this goal.',
      allScenariosApplied: 'All available scenarios are already applied to your current settings.',
      usingBestConfigurations: 'Your production setup is using the best available configurations across all scenarios.',
      improvement: 'Improvement',
      applied: 'Applied',
      applyScenarioToSettings: 'Apply this scenario to global settings',
      topN: 'Top',
      fixes: 'Fixes',
      power: 'Power',
      machines: 'Machines',
      belts: 'Belts',
      detailedComparison: 'Detailed Comparison',
      metric: 'Metric',
      totalBelts: 'Total Belts',
      green: 'Green',
      red: 'Red',
      greenIndicatesImprovement: 'indicates improvement',
      redIndicatesIncrease: 'indicates increase',
      applyBest: 'Apply Best',
      applyBestScenarioTitle: 'Apply the best scenario for this optimization goal',
      showingScenariosBy: 'Showing scenarios sorted by',
      showingScenariosLowestPower: 'Showing scenarios sorted by lowest power consumption',
      showingScenariosFewestMachines: 'Showing scenarios sorted by fewest machines needed',
      showingScenariosBestEfficiency: 'Showing scenarios sorted by best overall efficiency',
      showingScenariosBalanced: 'Showing scenarios sorted by most balanced improvements',
      lowestPowerConsumption: 'lowest power consumption',
      fewestMachines: 'fewest machines needed',
      bestOverallEfficiency: 'best overall efficiency',
      mostBalancedImprovements: 'most balanced improvements',
      notUsingMk3Proliferator: 'Not using Mk.III proliferator',
      upgradeToMk3ProliferatorSuggestion: 'Upgrade to Mk.III proliferator for better efficiency',
      conveyorBeltSaturationAt: 'Conveyor belt saturation at',
      upgradeToMk3ConveyorBelts: 'Upgrade to Mk.III conveyor belts',
      increaseBeltStackTo4: 'Increase belt stack to Ã4',
      minimumPowerConsumption: 'minimum power consumption',
      minimumMachineCount: 'minimum machine count',
      maximumEfficiency: 'maximum efficiency',
      balancedPerformance: 'balanced performance',
      scenarios: 'Scenarios',
      comparison: 'Comparison',
      powerChange: 'Power Change',
      machineChange: 'Machine Change',
      
      // Messages
      error: 'Error occurred',
      
      // Plan Manager
      planName: 'Plan Name',
      saveTooltip: 'Save your current plan',
      loadTooltip: 'Load a saved plan',
      shareTooltip: 'Share plan via URL',
      recentPlans: 'Recent Plans',
      noPlans: 'No saved plans',
      saveToLocalStorage: 'Save to Browser',
      saveToFile: 'Export to File',
      loadFromFile: 'Load from File',
      shareUrlDescription: 'Share your plan via URL. Copy the link and share it with other users.',
      sharedUrl: 'Shared URL',
      copied: 'Copied',
      copy: 'Copy',
      urlWarning: 'Note: The URL contains all settings. URLs may be long.',
      includeNodeOverrides: 'Include node overrides',
      mergeNodeOverridesOnLoad: 'Merge node overrides on load (imported overrides take precedence)',
      includeNodeOverridesInURL: 'Include node overrides in URL',
      
      // Alternative Recipes
      alternativeRecipes: 'Alternative Recipes',
      recipes: 'recipes',
      mining: 'Mining',
      compare: 'Compare',
      miningOnly: 'Mining only',
      selectPreferredRecipesDesc: 'Select your preferred recipes for each intermediate product in this production chain.',
      noAlternativeRecipesFound: 'No alternative recipes found for the current production chain.',
      source: 'Source',
      noInputsRequired: 'No inputs required - gathered from planet/gas giant',
      productionModeOK: 'Production mode OK',
      time: 'Time',
      
      // Recipe Comparison Modal
      recipeComparison: 'Recipe Comparison',
      machine: 'Machine',
      efficiencyScoreCalculation: 'Efficiency Score Calculation:',
      powerConsumptionLowerIsBetter: 'Power consumption (lower is better)',
      machineCountFewerIsBetter: 'Machine count (fewer is better)',
      inputComplexityFewerIsBetter: 'Input complexity (fewer inputs is better)',
      
      // UI Elements
      totalBeltSpeed: 'Total Belt Speed',
      itemsPerSecond: 'items/second',
      inputs: 'Inputs',
      outputs: 'Outputs',
      total: 'Total',
      saturation: 'Saturation',
      bottleneckDetected: 'Bottleneck detected!',
      addToFavorites: 'Add to favorites',
      removeFromFavorites: 'Remove from favorites',
      mostEfficient: 'Most efficient',
      fixAllBottlenecks: 'Fix all detected bottlenecks',
      starIndicatesMostEfficient: 'Star indicates the most efficient option based on current settings',
      
      // What-If Scenarios
      upgradeToMk3Proliferator: 'Upgrade to Mk.III Proliferator',
      upgradeToMk3ProliferatorDesc: 'Use Mk.III proliferator instead of current setting',
      upgradeToMk3Belt: 'Upgrade to Mk.III Conveyor Belt',
      upgradeToMk3BeltDesc: 'Use Mk.III conveyor belts (30 items/s)',
      increaseBeltStack: 'Increase Belt Stack to Ã4',
      increaseBeltStackDesc: 'Maximize belt capacity with 4-stack',
      upgradeToQuantumChemical: 'Upgrade to Quantum Chemical Plant',
      upgradeToQuantumChemicalDesc: 'Use Quantum Chemical Plant for chemical recipes',
      upgradeToAssemblerMk3: 'Upgrade to Assembler Mk.III',
      upgradeToAssemblerMk3Desc: 'Use Assembler Mk.III for assembly recipes',
      upgradeToRecomposingAssembler: 'Upgrade to Re-composing Assembler',
      upgradeToRecomposingAssemblerDesc: 'Use Re-composing Assembler for assembly recipes (3x speed)',
      switchToProductionMode: 'Switch to Production Mode',
      switchToProductionModeDesc: 'Use production mode proliferator (more output per craft)',
      switchToSpeedMode: 'Switch to Speed Mode',
      switchToSpeedModeDesc: 'Use speed mode proliferator (faster crafting)',
      
      // Welcome Modal
      welcomeToCalculator: 'ð Welcome to Dyson Sphere Program Production Calculator!',
      calculatorDescription: 'This tool is a calculator for optimizing production line design in Dyson Sphere Program.',
      mainFeatures: 'Main Features:',
      automaticProductionTree: 'Automatic production tree calculation',
      alternativeRecipeSelection: 'Alternative recipe selection and comparison', 
      bottleneckDetection: 'Bottleneck detection',
      whatIfSimulation: 'What-if simulation',
      planSaveShare: 'Plan save and share',
      basicUsage: 'ð Basic Usage',
      step1SelectRecipe: '1ï¸â£ Select Recipe',
      step1Description: 'Select the item you want to produce from the "Select Recipe" button.',
      step2SetTarget: '2ï¸â£ Set Target Production',
      step2Description: 'Enter how many items per second you want to produce in "Target" (e.g., 2).',
      step3AdjustSettings: '3ï¸â£ Adjust Settings',
      step3Description: 'You can adjust proliferator, machine rank, and conveyor belt settings.',
      step4CheckResults: '4ï¸â£ Check Results',
      step4Description: 'Production tree, required machine count, and power consumption are automatically calculated.',
      convenientFeatures: 'ð¡ Convenient Features',
      urlSharing: 'ð URL Sharing',
      urlSharingDescription: 'You can share plans via URL. Copy the link from the "Share URL" button.',
      planSaving: 'ð¾ Plan Saving',
      planSavingDescription: 'Save to browser with "Save" button, or export as JSON file.',
      whatIfSimulatorFeature: 'ð¯ What-If Simulator',
      whatIfSimulatorDescription: 'Simulate the impact of setting changes in advance with "What-If Simulator".',
      templateFeature: 'ð Template Feature',
      templateFeatureDescription: 'Presets according to game progress (Early/Mid/Late/End Game) are prepared.',
      stepProgress: 'Step {{current}} / {{total}}',
      skip: 'Skip',
      back: 'Back',
      next: 'Next',
      getStarted: 'Get Started!',
      
      // Error Boundary
      errorOccurred: 'An Error Occurred',
      errorApology: 'We apologize for the unexpected error that occurred.',
      errorDetails: 'Error Details:',
      showStackTrace: 'Show Stack Trace',
      reloadPage: 'ð Reload Page',
      clearDataRestart: 'ðï¸ Clear Data and Restart',
      backToHome: 'ð  Back to Home',
      errorTip: 'ð¡ Tip: If this error occurs repeatedly, try "Clear Data and Restart".',
      confirmClearData: 'Clear all saved data and reset? This action cannot be undone.',
    },
  },
  ja: {
    translation: {
      // Header
      title: 'Dyson Sphere Program - ã¬ã·ãè¨ç®æ©',
      loadingGameData: 'ã²ã¼ã ãã¼ã¿ãèª­ã¿è¾¼ã¿ä¸­...',
      
      // Recipe Selection
      selectRecipe: 'ã¬ã·ãé¸æ',
      target: 'ç®æ¨',
      perMinute: '/å',
      noRecipeSelected: 'ã¬ã·ããé¸æãã¦ãã ãã',
      
      // Recipe Categories
      categoryAll: 'ãã¹ã¦',
      categorySmelt: 'è£½é¬',
      categoryAssemble: 'çµç«', 
      categoryChemical: 'åå­¦',
      categoryResearch: 'ç ç©¶',
      categoryRefine: 'ç²¾è£½',
      categoryParticle: 'ç²å­å é',
      categoryFractionate: 'åç',
      calculating: 'è¨ç®ä¸­...',
      searchRecipesItemsMaterials: 'ã¬ã·ããã¢ã¤ãã ãç´ æãæ¤ç´¢...',
      suggestions: 'åè£',
      noResultsFound: 'çµæãè¦ã¤ããã¾ãã',
      trySearchingFor: 'æ¤ç´¢ã®ãã³ã:',
      searchHintRecipeNames: 'ã¬ã·ãå (ä¾: "éã¤ã³ã´ãã", "åè·¯åºæ¿")',
      searchHintMaterialNames: 'ç´ æå (ä¾: "éé±ç³", "éé±ç³")',
      searchHintProductNames: 'è£½åå (ä¾: "ãã­ã»ããµ", "ãã¬ã¼ã ")',
      searchHintRecipeIDs: 'ã¬ã·ãID (æ°å¤)',
      favorites: 'ãæ°ã«å¥ã',
      recipe: 'ã¬ã·ã',
      found: 'è¦ã¤ããã¾ãã',
      for: 'æ¤ç´¢:',
      searchingInNamesIDsInputsOutputs: 'ååãIDãå¥åãåºåã§æ¤ç´¢',
      pleaseSelectRecipe: 'ã¬ã·ããé¸æãã¦ãã ãã',
      saved: 'ä¿å­ãã¾ããï¼',
      gameDataNotLoaded: 'ã²ã¼ã ãã¼ã¿ãèª­ã¿è¾¼ã¾ãã¦ãã¾ãã',
      recipeNotFound: 'ã¬ã·ããè¦ã¤ããã¾ãã',
      planLoaded: 'ãã©ã³ã{{name}}ããèª­ã¿è¾¼ã¿ã¾ããï¼',
      loadError: 'èª­ã¿è¾¼ã¿ã¨ã©ã¼',
      planNotFound: 'ãã©ã³ãè¦ã¤ããã¾ãã',
      confirmDeletePlan: 'ãã®ãã©ã³ãåé¤ãã¾ããï¼',
      urlGenerationError: 'URLçæã¨ã©ã¼',
      copyFailed: 'ã³ãã¼ã«å¤±æãã¾ãã',
      
      // Buttons
      save: 'ä¿å­',
      load: 'èª­ã¿è¾¼ã¿',
      shareURL: 'URLå±æ',
      export: 'ã¨ã¯ã¹ãã¼ã',
      import: 'ã¤ã³ãã¼ã',
      apply: 'é©ç¨',
      cancel: 'ã­ã£ã³ã»ã«',
      close: 'éãã',
      reset: 'ãªã»ãã',
      delete: 'åé¤',
      show: 'è¡¨ç¤º',
      hide: 'éè¡¨ç¤º',
      expand: 'å±é',
      collapse: 'æãããã',
      
      // Settings
      settings: 'è¨­å®',
      proliferator: 'å¢ç£å¤',
      none: 'ãªã',
      productionMode: 'è¿½å çç£',
      speedMode: 'çç£éåº¦ä¸æ',
      conveyorBelt: 'ã³ã³ãã¢ãã«ã',
      sorter: 'ã½ã¼ã¿ã¼',
      machineRank: 'çç£è¨­å',
      template: 'ãã³ãã¬ã¼ã',
      type: 'ã¿ã¤ã',
      mode: 'ã¢ã¼ã',
      mk1: 'Mk.I',
      mk2: 'Mk.II',
      mk3: 'Mk.III',
      
      // Proliferator Settings
      proliferatorType: 'å¢ç£å¤ã¿ã¤ã',
      proliferatorMode: 'å¢ç£å¤ã¢ã¼ã',
      proliferatorMK1: 'å¢ç£å¤ Mk.I',
      proliferatorMK2: 'å¢ç£å¤ Mk.II',
      proliferatorMK3: 'å¢ç£å¤ Mk.III',
      exclusive: 'æä»ç',
      productionModeDisabled: 'ãã®ã¬ã·ãã§ã¯è¿½å çç£ã¢ã¼ãã¯ä½¿ç¨ã§ãã¾ãã',
      notAllowed: 'ä½¿ç¨ä¸å¯',
      output: 'çç£é',
      speed: 'éåº¦',
      activeEffects: 'é©ç¨ä¸­ã®å¹æ',
      productionBonus: 'çç£ãã¼ãã¹',
      speedBonus: 'éåº¦ãã¼ãã¹',
      powerIncrease: 'é»åå¢å ',
      boost: 'ãã¼ã¹ã',
      comparingProductionMethods: 'ã¢ã¤ãã ã®çç£æ¹æ³æ¯è¼',
      comparisonBasedOnProducing: 'çç£æ¯è¼åºæº',
      itemPerSecond: 'ã¢ã¤ãã /s',
      withCurrentSettings: '',
      method: 'æ¹æ³',
      efficiency: 'å¹ç',
      action: 'ã¢ã¯ã·ã§ã³',
      selected: 'é¸ææ¸ã¿',
      select: 'é¸æ',
      compareRecipes: 'ã¬ã·ãæ¯è¼',
      defaultOption: 'ããã©ã«ãé¸æè¢',
      defaultRecipe: 'ããã©ã«ãã¬ã·ã',
      belt: 'ãã«ã',
      
      // Node Settings Modal
      nodeSettings: 'ãã¼ãè¨­å®',
      unknown: 'ä¸æ',
      useCustomSettings: 'ã«ã¹ã¿ã è¨­å®ãä½¿ç¨',
      overrideGlobalSettingsForNode: 'ãã®ãã¼ãã®ã¿ã°ã­ã¼ãã«è¨­å®ãä¸æ¸ã',
      usingGlobalSettings: 'ã°ã­ã¼ãã«è¨­å®ãä½¿ç¨ä¸­',
      enableCustomSettingsToOverride: 'ã«ã¹ã¿ã è¨­å®ãæå¹ã«ãã¦ä¸æ¸ã',
      resetToGlobal: 'ã°ã­ã¼ãã«è¨­å®ã«æ»ã',
      applySettings: 'è¨­å®ãé©ç¨',
      
      // Template Settings
      applyTemplate: '{name}ãé©ç¨ãã¾ããï¼',
      applyQuestion: 'ãé©ç¨ãã¾ããï¼',
      miningResearch: 'æ¡æéåº¦ç ç©¶',
      stacks: 'æ®µ',
      pilingSorter: 'ééç©æµã¹ãã¼ã·ã§ã³',
      
      // Conveyor Belt Settings
      beltTier: 'ãã«ãã©ã³ã¯',
      stackCount: 'ã¹ã¿ãã¯æ° (1-4)',
      selectConveyorBeltDesc: 'ãã«ãæ°è¨ç®ã«ä½¿ç¨ããã³ã³ãã¢ãã«ãã®ã©ã³ã¯ã¨ã¹ã¿ãã¯æ°ãé¸æãã¦ãã ããã',
      
      // Machine Rank Settings
      smelter: 'è£½é¬è¨­å',
      assembler: 'çµç«æ©',
      chemicalPlant: 'åå­¦ãã©ã³ã',
      matrixLab: 'ãããªãã¯ã¹ã©ã',
      oilRefinery: 'ç²¾æ²¹æ',
      particleCollider: 'å°åç²å­è¡çªåå éå¨',
      selectMachineRankDesc: 'åçç£ã¿ã¤ãã§ä½¿ç¨ããè¨­åã©ã³ã¯ãé¸æãã¾ããä¸ä½ã©ã³ã¯ã¯é«éã§ãããããé«åº¦ãªæè¡ãå¿è¦ã«ãªãå ´åãããã¾ãã',
      fixedNoVariants: 'åºå®ï¼ããªã¨ã¼ã·ã§ã³ãªãï¼',
      
      // Machine Names
      arcSmelter: 'ã¢ã¼ã¯æº¶é±ç',
      planeSmelter: 'ãã¬ã¼ã³æº¶é±ç',
      negentropySmelter: 'è² ã¨ã³ãã­ãã¼æº¶é±ç',
      assemblingMachineMk1: 'çµç«æ© Mk.I',
      assemblingMachineMk2: 'çµç«æ© Mk.II',
      assemblingMachineMk3: 'çµç«æ© Mk.III',
      recomposingAssembler: 'åæ§æå¼çµç«æ©',
      chemicalPlantStandard: 'åå­¦ãã©ã³ã',
      quantumChemicalPlant: 'éå­åå­¦ãã©ã³ã',
      matrixLabStandard: 'ãããªãã¯ã¹ã©ã',
      selfEvolutionLab: 'èªå·±é²åã©ã',
      miniatureParticleCollider: 'å°åç²å­è¡çªåå éå¨',
      
      // Templates
      earlyGame: 'åºç¤',
      midGame: 'ä¸­ç¤',
      lateGame: 'å¾å',
      endGame: 'çµç¤',
      powerSaver: 'çé»å',
      earlyGameDesc: 'çç£éå§æã®åºæ¬è¨­å®',
      midGameDesc: 'ãã«ãæ¹åã¨åºæ¬çãªå¢ç£å¤',
      lateGameDesc: 'Mk.IIIè¨­åã§ã®é«åº¦ãªçç£',
      endGameDesc: 'ãã¹ã¦ã®ã¢ããã°ã¬ã¼ãã§æå¤§å¹ç',
      powerSaverDesc: 'å¢ç£ãã¼ã¹ãã§æ½è¨­æ°ãæå°å',
      
      // Production Tree
      productionTree: 'çç£ãã§ã¼ã³',
      statistics: 'çµ±è¨',
      buildingCost: 'å»ºè¨­ã³ã¹ã',
      expandAll: 'ãã¹ã¦å±é',
      collapseAll: 'ãã¹ã¦æãããã',
      
      // Node Info
      requiredRate: 'å¿è¦é',
      machineCount: 'æ©æ¢°æ°',
      powerConsumption: 'æ¶è²»é»å',
      conveyorBelts: 'ãã«ã',
      
      // Statistics
      totalPower: 'ç·é»å',
      totalMachines: 'ç·æ½è¨­æ°',
      rawMaterials: 'åææ',
      bottlenecks: 'ããã«ããã¯',
      productionStatistics: 'çç£çµ±è¨',
      selectRecipeToSeeStats: 'ã¬ã·ããé¸æããã¨çç£çµ±è¨ãè¡¨ç¤ºããã¾ã',
      productionOverview: 'çç£æ¦è¦',
      powerGraph: 'é»åã°ã©ã',
      itemsProduced: 'çç£ã¢ã¤ãã ',
      intermediateProducts: 'ä¸­éçç£ç©',
      production: 'çç£',
      consumption: 'æ¶è²»',
      net: 'æ­£å³',
      finalProducts: 'æçµçç£ç©',
      productionRate: 'çç£éåº¦',
      item: 'ã¢ã¤ãã ',
      
      // Building Cost
      selectRecipeForBuildingReqs: 'ã¬ã·ããé¸æããã¨å»ºè¨­è¦ä»¶ãè¡¨ç¤ºããã¾ã',
      productionMachines: 'çç£è¨­å',
      logistics: 'ç©æµ',
      sorters: 'ã½ã¼ã¿ã¼',
      mkIOrHigher: 'Mk.Iä»¥ä¸',
      currentTierSetting: 'ç¾å¨ã®ã©ã³ã¯è¨­å®',
      totalBuildingRequirements: 'ç·å»ºè¨­è¦ä»¶',
      units: 'åº',
      
      // Mining Calculator
      miningCalculator: 'æ¡æè¨ç®æ©',
      noRawMaterialsRequired: 'ãã®çç£ãã§ã¼ã³ã«ã¯åææã¯å¿è¦ããã¾ããã',
      calculateMiningMachinesNeeded: 'åæææ¡æã«å¿è¦ãªæ¡ææ©ã®æ°ãè¨ç®',
      miningSpeedResearch: 'æ¡æéåº¦ç ç©¶',
      miningResearchHint: '100% = ç ç©¶ãªãã200% = Lv10',
      machineType: 'æ©æ¢°ã¿ã¤ã',
      miningMachine: 'æ¡ææ©',
      advancedMiningMachine: 'é«åº¦æ¡ææ©',
      workSpeed: 'ä½æ¥­éåº¦',
      advancedOnly: 'å¤§åã®ã¿',
      orbitalCollectors: 'è»éæ¡éå¨',
      forHydrogenDeuterium: 'æ°´ç´ /éæ°´ç´ ç¨',
      powerMultiplier: 'é»ååç',
      standardPower: 'æ¨æºé»å',
      materialBreakdown: 'ç´ æåè¨³',
      required: 'å¿è¦é',
      research: 'ç ç©¶',
      collectors: 'æ¡éå¨',
      each: 'å',
      veins: 'é±è',
      minersNeeded: 'æ¡ææ©å¿è¦æ°',
      veinsNeededLabel: 'å¿è¦é±èæ°',
      veinsNeededDesc: 'å¿è¦ãªè³æºé±èã®ç·æ°ãæ¡ææ©æ°ã¯ç´6é±èã«ã¤ã1å°ã§æ¨å®ã',
      miningSpeedResearchDesc: 'ã¬ãã«ãã¨ã«+10%ãã²ã¼ã åã§ã¯Lv10000+ã«å°éå¯è½ï¼(100% = ç ç©¶ãªãã200% = Lv10)',
      workSpeedAdvanced: 'ä½æ¥­éåº¦ï¼å¤§åã®ã¿ï¼',
      workSpeedAdvancedDesc: '1%ç²¾åº¦ã®ã¹ã©ã¤ãã¼ãé»å = (éåº¦%)Â²ã300%éåº¦ = 9åé»åï¼',
      orbitalCollectorsDesc: 'æ°´ç´ (0.84/s)ã¨éæ°´ç´ (0.03/s)ã®ã¿ãç ç©¶ãã¼ãã¹ãé©ç¨ããã¾ãã',
      verified: 'æ¤è¨¼æ¸ã¿',
      verifiedDesc: 'ãã¹ã¦ã®å¤ã¯ã²ã¼ã åãã¼ã¿ã§ç¢ºèªæ¸ã¿ã',
      
      // Power Graph View
      powerConsumptionKW: 'æ¶è²»é»å (kW)',
      noPowerConsumptionData: 'æ¶è²»é»åãã¼ã¿ãããã¾ãã',
      totalPowerConsumption: 'ç·æ¶è²»é»å',
      powerDistribution: 'é»åéå',
      powerBreakdown: 'é»ååè¨³',
      
      // Mod Settings
      modSettings: 'Modè¨­å®',
      advancedSettingsForModded: 'Modç°å¢åãã®é«åº¦ãªè¨­å®',
      advancedFeatures: 'é«åº¦ãªæ©è½',
      advancedFeaturesWarning: 'ãããã®è¨­å®ã¯Modç°å¢åãã§ããç¡å¹ãªãã¼ã¿ãã¢ããã­ã¼ãããã¨è¨ç®ã¨ã©ã¼ãçºçããå¯è½æ§ãããã¾ãã',
      customRecipesXML: 'ã«ã¹ã¿ã Recipes.xml',
      uploadCustomRecipesDesc: 'ã«ã¹ã¿ã Recipes.xmlãã¡ã¤ã«ãã¢ããã­ã¼ããã¦ãããã©ã«ãã®ã²ã¼ã ã¬ã·ããç½®ãæãã¾ããã¬ã·ãæ¹é Modç¨ã«ä¾¿å©ã§ãã',
      uploadXML: 'XMLãã¢ããã­ã¼ã',
      resetToDefault: 'ããã©ã«ãã«ãªã»ãã',
      recipesUpdatedSuccessfully: 'ã¬ã·ããæ­£å¸¸ã«æ´æ°ããã¾ããï¼',
      customProliferatorMultipliers: 'ã«ã¹ã¿ã å¢ç£å¤åç',
      customProliferatorMultipliersDesc: 'ãã¹ã¦ã®å¢ç£å¤ãã¼ãã¹ã®ã°ã­ã¼ãã«åçãè¨­å®ãã¾ããä¾ãã°ãçç£ã25ã«è¨­å®ããã¨ããã¹ã¦ã®çç£ãã¼ãã¹ã25åã«ãªãã¾ãã',
      productionMultiplierLabel: 'çç£åç (1 = ããã©ã«ãã25 = 25å)',
      speedMultiplierLabel: 'éåº¦åç (1 = ããã©ã«ãã5 = 5å)',
      applyCustomMultipliers: 'ã«ã¹ã¿ã åçãé©ç¨',
      defaultMultipliers: 'ããã©ã«ãåç: 1x (çç£)ã1x (éåº¦)',
      pressCtrlShiftM: 'Ctrl+Shift+M ãæ¼ãã¦ãã®ããã«ãéã',
      invalidFileType: 'ç¡å¹ãªãã¡ã¤ã«å½¢å¼ã§ããXMLãã¡ã¤ã«ãã¢ããã­ã¼ããã¦ãã ããã',
      fileTooLarge: 'ãã¡ã¤ã«ãå¤§ãããã¾ããæå¤§ãµã¤ãºã¯10MBã§ãã',
      invalidRecipesXML: 'ç¡å¹ãªRecipes.xmlå½¢å¼ã§ããå¿è¦ãªXMLæ§é ãè¦ã¤ããã¾ããã',
      securityError: 'ã»ã­ã¥ãªãã£ã¨ã©ã¼: ãã¡ã¤ã«ã«æ½å¨çã«æªæã®ããã³ã³ãã³ããå«ã¾ãã¦ãã¾ãã',
      xmlParsingError: 'XMLè§£æã¨ã©ã¼: ç¡å¹ãªXMLæ§æã§ãã',
      noRecipesFound: 'ã¢ããã­ã¼ãããããã¡ã¤ã«ã«ã¬ã·ããè¦ã¤ããã¾ããã',
      failedToParseCustomRecipes: 'ã«ã¹ã¿ã ã¬ã·ãã®è§£æã«å¤±æãã¾ãã',
      failedToReadFile: 'ãã¡ã¤ã«ã®èª­ã¿åãã«å¤±æãã¾ãã',
      confirmResetToDefault: 'ããã©ã«ãã®ã²ã¼ã ãã¼ã¿ã«ãªã»ãããã¾ããï¼åã®ãã¡ã¤ã«ãããã¹ã¦ã®ã¬ã·ããåèª­ã¿è¾¼ã¿ãã¾ãã',
      failedToReset: 'ãªã»ããã«å¤±æãã¾ãã',
      
      // What-if Simulator
      whatIfSimulator: 'What-ifã·ãã¥ã¬ã¼ã¿ã¼',
      whatIfAnalysis: 'What-ifåæ',
      compareDifferentSettings: 'ç°ãªãè¨­å®ãæ¯è¼ãã¦çç£ãæé©å',
      current: 'ç¾å¨',
      scenarioApplied: 'ã·ããªãªé©ç¨å®äºï¼',
      scenarioAppliedToSettings: 'ãã°ã­ã¼ãã«è¨­å®ã«é©ç¨ããã¾ãã',
      bottlenecksDetected: 'ããã«ããã¯æ¤åº',
      productionChainInefficiencies: 'çç£ãã§ã¼ã³ã«éå¹çãªç®æãããã¾ããä»¥ä¸ã®æ¹åæ¡ãåç§ãã¦ãã ãã:',
      fixAll: 'ãã¹ã¦ä¿®æ­£',
      fixNow: 'ä»ããä¿®æ­£',
      noBottlenecksDetected: 'ããã«ããã¯ãªã',
      productionChainSmooth: 'çç£ãã§ã¼ã³ã¯é£½ååé¡ãªãã¹ã ã¼ãºã«ç¨¼åãã¦ãã¾ãããã¹ã¦ã®ã³ã³ãã¢ãã«ãã¯æé©å®¹éï¼<80%ï¼åã§åä½ãã¦ãã¾ãã',
      optimizationEngine: 'æé©åã¨ã³ã¸ã³',
      selectOptimizationGoal: 'æé©åç®æ¨ãé¸æããã¨ãã·ããªãªãèªåçã«ã©ã³ã¯ä»ãããã¾ã',
      allOptimizationsComplete: 'ãã¹ã¦ã®æé©åãå®äºãã¾ããï¼',
      quickActions: 'ã¯ã¤ãã¯ã¢ã¯ã·ã§ã³',
      applyCommonOptimizations: 'ã¯ã³ã¯ãªãã¯ã§ä¸è¬çãªæé©åãé©ç¨',
      maxProliferator: 'å¢ç£å¤æå¤§',
      maxBelts: 'ãã«ãæå¤§',
      maxStack: 'ã¹ã¿ãã¯æå¤§',
      minPower: 'é»åæå°å',
      minMachines: 'æ½è¨­æ°æå°å',
      maxEfficiency: 'å¹çæå¤§å',
      balanced: 'ãã©ã³ã¹',
      optimizationComplete: 'æé©åå®äºï¼',
      alreadyOptimizedFor: 'çç£è¨­å®ã¯æ¢ã«æé©åããã¦ãã¾ã:',
      noFurtherImprovements: 'ãã®æé©åç®æ¨ã«ã¤ãã¦ãããªãæ¹åã¯ããã¾ããã',
      perfectConfiguration: 'ãã®ç®æ¨ã«å¯¾ããè¨­å®ã¯æ¢ã«æé©åããã¦ãã¾ãã',
      allScenariosApplied: 'å©ç¨å¯è½ãªãã¹ã¦ã®ã·ããªãªãç¾å¨ã®è¨­å®ã«æ¢ã«é©ç¨ããã¦ãã¾ãã',
      usingBestConfigurations: 'çç£è¨­å®ã¯ãã¹ã¦ã®ã·ããªãªã§å©ç¨å¯è½ãªæè¯ã®æ§æãä½¿ç¨ãã¦ãã¾ãã',
      improvement: 'æ¹å',
      applied: 'é©ç¨æ¸',
      applyScenarioToSettings: 'ãã®ã·ããªãªãã°ã­ã¼ãã«è¨­å®ã«é©ç¨',
      topN: 'ããã',
      fixes: 'ä¿®æ­£',
      power: 'é»å',
      machines: 'æ½è¨­æ°',
      belts: 'ãã«ã',
      detailedComparison: 'è©³ç´°æ¯è¼',
      metric: 'ææ¨',
      totalBelts: 'ç·ãã«ãæ°',
      green: 'ç·',
      red: 'èµ¤',
      greenIndicatesImprovement: 'ã¯æ¹åãç¤ºãã¾ã',
      redIndicatesIncrease: 'ã¯å¢å ãç¤ºãã¾ã',
      applyBest: 'æè¯ãé©ç¨',
      applyBestScenarioTitle: 'ãã®æé©åç®æ¨ã®æè¯ã·ããªãªãé©ç¨',
      showingScenariosBy: 'ã·ããªãªãã½ã¼ã:',
      showingScenariosLowestPower: 'æãæ¶è²»é»åã®å°ãªãã·ããªãªãè¡¨ç¤ºä¸­',
      showingScenariosFewestMachines: 'æãæ½è¨­æ°ã®å°ãªãã·ããªãªãè¡¨ç¤ºä¸­',
      showingScenariosBestEfficiency: 'æãå¹çã®é«ãã·ããªãªãè¡¨ç¤ºä¸­',
      showingScenariosBalanced: 'æããã©ã³ã¹ã®åããã·ããªãªãè¡¨ç¤ºä¸­',
      lowestPowerConsumption: 'æ¶è²»é»åãæãå°ãªã',
      fewestMachines: 'å¿è¦æ½è¨­æ°ãæãå°ãªã',
      bestOverallEfficiency: 'ç·åå¹çãæãé«ã',
      mostBalancedImprovements: 'æããã©ã³ã¹ã®åããæ¹å',
      notUsingMk3Proliferator: 'Mk.IIIå¢ç£å¤ãä½¿ç¨ãã¦ãã¾ãã',
      upgradeToMk3ProliferatorSuggestion: 'å¹çåä¸ã®ããMk.IIIå¢ç£å¤ã¸ã¢ããã°ã¬ã¼ã',
      conveyorBeltSaturationAt: 'ã³ã³ãã¢ãã«ãé£½ååº¦',
      upgradeToMk3ConveyorBelts: 'Mk.IIIã³ã³ãã¢ãã«ãã¸ã¢ããã°ã¬ã¼ã',
      increaseBeltStackTo4: 'ãã«ãã¹ã¿ãã¯ãÃ4ã«å¢å ',
      minimumPowerConsumption: 'æ¶è²»é»åæå°å',
      minimumMachineCount: 'æ½è¨­æ°æå°å',
      maximumEfficiency: 'å¹çæå¤§å',
      balancedPerformance: 'ãã©ã³ã¹å',
      scenarios: 'ã·ããªãª',
      comparison: 'æ¯è¼',
      powerChange: 'é»åå¤å',
      machineChange: 'æ½è¨­æ°å¤å',
      
      // Messages
      error: 'ã¨ã©ã¼ãçºçãã¾ãã',
      
      // Plan Manager
      planName: 'ãã©ã³å',
      saveTooltip: 'ç¾å¨ã®ãã©ã³ãä¿å­',
      loadTooltip: 'ä¿å­ãããã©ã³ãèª­ã¿è¾¼ã¿',
      shareTooltip: 'URLã§ãã©ã³ãå±æ',
      recentPlans: 'æè¿ã®ä¿å­',
      noPlans: 'ä¿å­ããããã©ã³ã¯ããã¾ãã',
      saveToLocalStorage: 'ãã©ã¦ã¶ã«ä¿å­',
      saveToFile: 'ãã¡ã¤ã«åºå',
      loadFromFile: 'ãã¡ã¤ã«ããèª­ã¿è¾¼ã¿',
      shareUrlDescription: 'ãã®è¨ç»ãURLã§å±æã§ãã¾ãããªã³ã¯ãã³ãã¼ãã¦ä»ã®ã¦ã¼ã¶ã¼ã¨å±æãã¾ãããã',
      sharedUrl: 'å±æURL',
      copied: 'ã³ãã¼æ¸ã¿',
      copy: 'ã³ãã¼',
      urlWarning: 'æ³¨æ: URLã«ã¯ãã¹ã¦ã®è¨­å®ãå«ã¾ãã¦ãã¾ããURLãé·ããªãå ´åãããã¾ãã',
      includeNodeOverrides: 'ãã¼ããªã¼ãã¼ã©ã¤ããå«ãã',
      mergeNodeOverridesOnLoad: 'èª­ã¿è¾¼ã¿æã«ãã¼ããªã¼ãã¼ã©ã¤ãããã¼ã¸ï¼ã¤ã³ãã¼ãå´ãåªåï¼',
      includeNodeOverridesInURL: 'URLã«ãã¼ããªã¼ãã¼ã©ã¤ããå«ãã',
      
      // Alternative Recipes
      alternativeRecipes: 'ä»£æ¿ã¬ã·ã',
      recipes: 'ã¬ã·ã',
      mining: 'æ¡æ',
      compare: 'æ¯è¼',
      miningOnly: 'æ¡æã®ã¿',
      selectPreferredRecipesDesc: 'ãã®çç£ãã§ã¼ã³ã§åä¸­éè£½åã®åªåã¬ã·ããé¸æãã¦ãã ããã',
      noAlternativeRecipesFound: 'ç¾å¨ã®çç£ãã§ã¼ã³ã«ä»£æ¿ã¬ã·ããè¦ã¤ããã¾ããã§ããã',
      source: 'å¥æå',
      noInputsRequired: 'å¥åä¸è¦ - ææ/ã¬ã¹ææããæ¡å',
      productionModeOK: 'çç£ã¢ã¼ãå¯¾å¿',
      time: 'æé',
      
      // Recipe Comparison Modal
      recipeComparison: 'ã¬ã·ãæ¯è¼',
      machine: 'è¨­å',
      efficiencyScoreCalculation: 'å¹çã¹ã³ã¢è¨ç®:',
      powerConsumptionLowerIsBetter: 'æ¶è²»é»å (å°ãªãã»ã©è¯ã)',
      machineCountFewerIsBetter: 'è¨­åæ° (å°ãªãã»ã©è¯ã)',
      inputComplexityFewerIsBetter: 'å¥åè¤éåº¦ (å¥åãå°ãªãã»ã©è¯ã)',
      
      // UI Elements
      totalBeltSpeed: 'ãã«ãç·éåº¦',
      itemsPerSecond: 'ã¢ã¤ãã /ç§',
      inputs: 'å¥å',
      outputs: 'åºå',
      total: 'åè¨',
      saturation: 'é£½ååº¦',
      bottleneckDetected: 'ããã«ããã¯æ¤åºï¼',
      addToFavorites: 'ãæ°ã«å¥ãã«è¿½å ',
      removeFromFavorites: 'ãæ°ã«å¥ãããåé¤',
      mostEfficient: 'æãå¹çç',
      fixAllBottlenecks: 'ãã¹ã¦ã®ããã«ããã¯ãä¿®æ­£',
      starIndicatesMostEfficient: 'æå°ã¯ç¾å¨ã®è¨­å®ã«åºã¥ãæãå¹ççãªãªãã·ã§ã³ãç¤ºãã¾ã',
      
      // What-If Scenarios
      upgradeToMk3Proliferator: 'å¢ç£å¤Mk.IIIã«ã¢ããã°ã¬ã¼ã',
      upgradeToMk3ProliferatorDesc: 'ç¾å¨ã®è¨­å®ã®ä»£ããã«Mk.IIIå¢ç£å¤ãä½¿ç¨',
      upgradeToMk3Belt: 'ã³ã³ãã¢ãã«ãMk.IIIã«ã¢ããã°ã¬ã¼ã',
      upgradeToMk3BeltDesc: 'Mk.IIIã³ã³ãã¢ãã«ããä½¿ç¨ï¼30ã¢ã¤ãã /ç§ï¼',
      increaseBeltStack: 'ãã«ãã¹ã¿ãã¯ãÃ4ã«å¢å ',
      increaseBeltStackDesc: '4ã¹ã¿ãã¯ã§ãã«ãå®¹éãæå¤§å',
      upgradeToQuantumChemical: 'éå­åå­¦ãã©ã³ãã«ã¢ããã°ã¬ã¼ã',
      upgradeToQuantumChemicalDesc: 'åå­¦ã¬ã·ãã«éå­åå­¦ãã©ã³ããä½¿ç¨',
      upgradeToAssemblerMk3: 'çµç«æ©Mk.IIIã«ã¢ããã°ã¬ã¼ã',
      upgradeToAssemblerMk3Desc: 'çµç«ã¬ã·ãã«çµç«æ©Mk.IIIãä½¿ç¨',
      upgradeToRecomposingAssembler: 'åæ§æå¼çµç«æ©ã«ã¢ããã°ã¬ã¼ã',
      upgradeToRecomposingAssemblerDesc: 'çµç«ã¬ã·ãã«åæ§æå¼çµç«æ©ãä½¿ç¨ï¼3åéåº¦ï¼',
      switchToProductionMode: 'è¿½å çç£ã¢ã¼ãã«åãæ¿ã',
      switchToProductionModeDesc: 'è¿½å çç£ã¢ã¼ãå¢ç£å¤ãä½¿ç¨ï¼ã¯ã©ãããããã®åºåå¢å ï¼',
      switchToSpeedMode: 'çç£éåº¦ä¸æã¢ã¼ãã«åãæ¿ã',
      switchToSpeedModeDesc: 'çç£éåº¦ä¸æã¢ã¼ãå¢ç£å¤ãä½¿ç¨ï¼ã¯ã©ããéåº¦åä¸ï¼',
      
      // Welcome Modal
      welcomeToCalculator: 'ð Dyson Sphere Program Production Calculator ã¸ããããï¼',
      calculatorDescription: 'ãã®ãã¼ã«ã¯ãDyson Sphere Programã®çç£ã©ã¤ã³è¨­è¨ãæé©åããããã®è¨ç®æ©ã§ãã',
      mainFeatures: 'ä¸»ãªæ©è½:',
      automaticProductionTree: 'çç£ããªã¼ã®èªåè¨ç®',
      alternativeRecipeSelection: 'ä»£æ¿ã¬ã·ãã®é¸æã»æ¯è¼', 
      bottleneckDetection: 'ããã«ããã¯æ¤åº',
      whatIfSimulation: 'What-ifã·ãã¥ã¬ã¼ã·ã§ã³',
      planSaveShare: 'è¨ç»ã®ä¿å­ã»å±æ',
      basicUsage: 'ð åºæ¬çãªä½¿ãæ¹',
      step1SelectRecipe: '1ï¸â£ ã¬ã·ããé¸æ',
      step1Description: 'ãSelect Recipeããã¿ã³ããçç£ãããã¢ã¤ãã ãé¸æãã¾ãã',
      step2SetTarget: '2ï¸â£ ç®æ¨çç£éãè¨­å®',
      step2Description: 'ãTargetãã«æ¯ç§ä½åçç£ãããããå¥åãã¾ãï¼ä¾: 2ï¼ã',
      step3AdjustSettings: '3ï¸â£ è¨­å®ãèª¿æ´',
      step3Description: 'å¢ç£å¤ãæ©æ¢°ã©ã³ã¯ãã³ã³ãã¢ãã«ãã®è¨­å®ãèª¿æ´ã§ãã¾ãã',
      step4CheckResults: '4ï¸â£ çµæãç¢ºèª',
      step4Description: 'çç£ããªã¼ãå¿è¦ãªæ©æ¢°æ°ãé»åæ¶è²»ãèªåè¨ç®ããã¾ãã',
      convenientFeatures: 'ð¡ ä¾¿å©ãªæ©è½',
      urlSharing: 'ð URLå±æ',
      urlSharingDescription: 'è¨ç»ãURLã§å±æã§ãã¾ãããURLå±æããã¿ã³ãããªã³ã¯ãã³ãã¼ã',
      planSaving: 'ð¾ è¨ç»ã®ä¿å­',
      planSavingDescription: 'ãä¿å­ããã¿ã³ã§ãã©ã¦ã¶ã«ä¿å­ãã¾ãã¯JSONãã¡ã¤ã«ã¨ãã¦ã¨ã¯ã¹ãã¼ãã',
      whatIfSimulatorFeature: 'ð¯ What-ifã·ãã¥ã¬ã¼ã¿ã¼',
      whatIfSimulatorDescription: 'ãWhat-If Simulatorãã§è¨­å®å¤æ´ã®å½±é¿ãäºåã«ã·ãã¥ã¬ã¼ã·ã§ã³ã',
      templateFeature: 'ð ãã³ãã¬ã¼ãæ©è½',
      templateFeatureDescription: 'ã²ã¼ã é²è¡åº¦ã«å¿ããããªã»ããï¼Early/Mid/Late/End Gameï¼ãç¨æã',
      stepProgress: 'ã¹ããã {{current}} / {{total}}',
      skip: 'ã¹ã­ãã',
      back: 'æ»ã',
      next: 'æ¬¡ã¸',
      getStarted: 'å§ããï¼',
      
      // Error Boundary
      errorOccurred: 'ã¨ã©ã¼ãçºçãã¾ãã',
      errorApology: 'ç³ãè¨³ãããã¾ãããäºæããªãã¨ã©ã¼ãçºçãã¾ããã',
      errorDetails: 'ã¨ã©ã¼è©³ç´°:',
      showStackTrace: 'ã¹ã¿ãã¯ãã¬ã¼ã¹ãè¡¨ç¤º',
      reloadPage: 'ð ãã¼ã¸ãåèª­ã¿è¾¼ã¿',
      clearDataRestart: 'ðï¸ ãã¼ã¿ãã¯ãªã¢ãã¦åèµ·å',
      backToHome: 'ð  ãã¼ã ã«æ»ã',
      errorTip: 'ð¡ ãã³ã: ãã®ã¨ã©ã¼ãç¹°ãè¿ãçºçããå ´åã¯ãããã¼ã¿ãã¯ãªã¢ãã¦åèµ·åããè©¦ãã¦ãã ããã',
      confirmClearData: 'ãã¹ã¦ã®ä¿å­ãã¼ã¿ãã¯ãªã¢ãã¦ãªã»ãããã¾ããï¼ãã®æä½ã¯åã«æ»ãã¾ããã',
    },
  },
};

i18n
  .use(initReactI18next)
  .init({
    resources,
    lng: 'ja', // Default language
    fallbackLng: 'en',
    interpolation: {
      escapeValue: false,
    },
  });

export default i18n;
